###%***************************************************************************%
###%                                                                          *%                                                                                                                   
###%    Script to run Step 1 of the Cleaving Method with Walls                *%
###%                                                                          *%
###%***************************************************************************%
###%                                                                          *%
###%    Based on:                                                             *%
###%    R. Davidchack, B. Laird, J. Chem. Phys., 118:7651-7657 (2003)         *%
###%                                                                          *%
###%   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~         *%
###%                                                                          *%
###%    Created by:                                                           *%
###%    Nicodemo Di Pasquale                                                  *%
###%    Department of Mathematics                                             *%
###%    University of Leicester                                               *%
###%    24 March 2018                                                         *%
###%                                                                          *%
###%***************************************************************************%

units		lj
atom_style	atomic

boundary p p p
read_data  preS1.data

mass * 1.0

region Rfrz1 prism 0.0 12.6 0.0 11.9 0.4 0.5 0.0 0.0 0.0
region Rfrz2 prism 0.0 12.6 0.0 11.9 33.1 33.2 0.0 0.0 0.0

group highF region Rfrz1
group lowF region Rfrz2
group Freeze union highF lowF
group Free subtract all Freeze



# ---------------------------- Define variables --------------------------------

variable backloop equal 0
variable  clwall equal  0.0
variable  sigma  equal  1.0
variable  cnt    equal  1
variable  eps    equal  1.0
variable  delta  equal  0.25
variable  zwi    equal  1.13
variable  zwf    equal  0.5
variable  dew    equal  0.02
variable  crw    equal  2.0^(1.0/6.0)   
variable  nloop  equal  1000
variable  eqnts  equal  3000 
variable  nts    equal  25000
variable  firsteqnts    equal 45000
variable  ts     equal  0.005
variable  siglj  equal  1.0
variable  epslj  equal  1.0
variable  cut1   equal  2.3
variable  cut2   equal  2.5
variable  Tsyst  equal  0.617
variable  Tdump  equal  0.0748
variable Nevery equal 100
variable Nrepeat equal 5 
variable Nfreq equal 500
variable dumpfreq equal 20000
variable restartfreq equal 200000 

# --------------------- Derivate variables -------------------------------------


variable  rw       equal  ${sigma}*${crw}
variable  cutoff1  equal  ${siglj}*${cut1} 
variable  cutoff2  equal  ${siglj}*${cut2} 
variable  cntt     equal  ${cnt}  
variable  lowlimit equal  ${zwf}+1.5*${dew}
variable  highlimit equal  ${zwi}-1.5*${dew}

# ----------------------------- Interactions -----------------------------------

pair_style lj/BG ${cutoff1} ${cutoff2}
pair_coeff   * *  ${epslj} ${siglj}

neighbor     0.3 bin
neigh_modify every 1 delay 0 check yes 
atom_modify  sort 0 0.0

# ------------------------- fix atoms  -------------------------------

velocity Free create ${Tsyst} 93874090 
velocity all zero linear
velocity all zero angular
velocity Freeze set 0.0 0.0 0.0
fix f1 Freeze setforce 0.0 0.0 0.0 

# ------------- Output thermo information and averaged variables ---------------

thermo    1000
timestep  ${ts}

# --------------- Dumping trajectories and store restart file ------------------

#dump        Dp1 all custom ${dumpfreq} dump/dump.*.xyz id type x y z 
#restart   ${restartfreq} X.restart/X.restart

# -------------------------- Zero linear momentum ------------------------------

fix    Fix2  Free momentum 1 linear 1 1 1

# ---------- ----------------- Equilibrium at zwi -------------------------------

variable zw equal ${zwi}
variable zzw equal ${zw}

print "Equilibrium at zwi"
print "Wall distance ${zw}"


fix  f2 all wallforce ${eps} ${sigma} ${zw} ${delta} ${rw} ${clwall} file walls.lmp
fix  f3  all nvt temp ${Tsyst} ${Tsyst} ${Tdump}

run  ${firsteqnts}

fix  f4 all ave/time ${Nevery} ${Nrepeat} ${Nfreq} c_thermo_temp c_thermo_pe f_f2 v_zw file  out/ave.F.${cnt}.out

run  ${nts}

write_data data/Fstep1.${zw}.data nocoeff

unfix f2
unfix f4


# -------------------------- moving walls Forward ------------------------------

include		in.loop/loop

# -------------------------- Equilibrium at zwf ---------------------------------


variable zzw equal ${zw}-${dew} 
variable zw equal ${zzw}

print "Equilibrium at zwf"
print "Wall distance ${zw}"


fix  f2 all wallforce ${eps} ${sigma} ${zw} ${delta} ${rw} ${clwall} file walls.lmp

run   ${eqnts}

variable    cnt equal ${cntt}+1
variable    cntt equal ${cnt}
fix   f4 all ave/time ${Nevery} ${Nrepeat} ${Nfreq} c_thermo_temp c_thermo_pe f_f2 v_zwf file  out/ave.F.${cnt}.out

run      ${nts}

write_data data/Fstep1.${zw}.data nocoeff

unfix   f2
unfix   f4


# ------------------------ moving walls backward -------------------------------

if " ${backloop} == 0 " then "quit"

include		in.loop/loop.back

# ------------------------ Equilibrium at zwi -------------------------------

variable zzw equal ${zw}-${dew} 
variable zw equal ${zzw}

fix  f2 all wallforce ${eps} ${sigma} ${zw} ${delta} ${rw} ${clwall} file walls.lmp

run  ${eqnts}

fix    f4 all ave/time ${Nevery} ${Nrepeat} ${Nfreq} c_thermo_temp c_thermo_pe f_f2 v_zw file  out/ave.B.${cnt}.out

run    ${nts}

write_data data/Bstep1.${zw}.data nocoeff

unfix f2
unfix f4



